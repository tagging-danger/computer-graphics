#include <conio.h>
#include <stdio.h>
#include <graphics.h>

#define edge_colour WHITE
#define replacement GREEN
#define background BLACK

#ifdef min
#undef min
#endif

#ifdef max
#undef max
#endif

int x[10], y[10], n;
int fx, fy;
int xmin, ymin;
int xmax, ymax;

int sigmoid(int val) {
    if (val > 0) return 1;
    if (val < 0) return -1;
    return 0;
}

int abs(int val) { return (val < 0) ? -val : val; }
int min(int a, int b) { return (a < b) ? a : b; }
int max(int a, int b) { return (a > b) ? a : b; }

void swap(int *first, int *second) {
    int temp = *first;
    *first = *second;
    *second = temp;
}

int evenodd_left(int x, int y) {
    int counter = 0;
    int background = getbkcolor();

    for (int i = x; i >= xmin; i--){
        int now = getpixel(i, y);
        if (now == edge_colour || now == replacement)
            counter++;
    }
    return counter;
}

int evenodd_right(int x, int y) {
    int counter = 0;
    for (int i = x; i <= xmax; i++)
        if (getpixel(i, y) == edge_colour)
            counter++;
    return counter;
}

void leftfill(int fx, int fy) {
    int x, y, hit = 0;

    for (y = ymin; y <= fy; y++) {
        for (x = xmin; x <= fx; x++) {
            if ((evenodd_left(x, y) & 1)) {
                putpixel(x, y, replacement);
            }
        }
    }

    for (y = fy; y <= ymax; y++) {
        for (x = fx; x >= xmin; x--) {
            if ((evenodd_left(x, y) & 1)) {
                putpixel(x, y, replacement);
            }
        }
    }
}

void rightfill(int fx, int fy) {
    int x, y;

    for (y = ymin; y <= fy; y++) {
        for (x = fx; x <= xmax; x++) {
            if (evenodd_right(x, y) & 1) {
                putpixel(x, y, GREEN);
            }
        }
    }

    for (y = fy; y <= ymax; y++) {
        for (x = fx; x <= xmax; x++) {
            if (evenodd_right(x, y) & 1) {
                putpixel(x, y, GREEN);
            }
        }
    }
}

void fill() {
    fx = x[0];
    fy = y[0];

    rightfill(fx, fy);
    leftfill(fx, fy);
}


int main() {
    int gd = DETECT, gm;
    int fx, fy;
    initgraph(&gd, &gm, " ");

    int i;

    // top point
    //x[0] = 50;
    //y[0] = 50;

    // right point
    //x[1] = 250;
    //y[1] = 250;

    // bottom point
    //x[2] = 50;
    //y[2] = 80;

    // left point
    //x[3] = 0;
    //y[3] = 250;

    x[0] = 100;
    y[0] = 100;

    x[2] = 100;
    y[2] = 200;

    x[1] = 50;
    y[1] = 150;

    x[3] = 250;
    y[3] = 150;

    n = 4;

    // put default values to min and max variables
    xmin = ymin = (1 << 15) - 1;
    xmax = ymax = 0;

    for (i = 0; i < n; i++) {
        if (x[i] < xmin) xmin = x[i];
        if (x[i] > xmax) xmax = x[i];

        if (y[i] < ymin) ymin = y[i];
        if (y[i] > ymax) ymax = y[i];
    }


    for (i = 1; i < n; i++)
        line(x[i - 1], y[i - 1], x[i], y[i]);
    line(x[0], y[0], x[n - 1], y[n - 1]);

    fill();

    getch();
    // closegraph();
    return 0;
}